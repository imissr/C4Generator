{
  "configuration" : { },
  "description" : "C4 Model for a Spring Boot-based automotive workshop management system",
  "documentation" : { },
  "id" : 0,
  "model" : {
    "people" : [ {
      "description" : "Vehicle owners who book appointments and services through the system",
      "id" : "1",
      "location" : "Unspecified",
      "name" : "Customer",
      "relationships" : [ {
        "description" : "Books appointments and views services through",
        "destinationId" : "4",
        "id" : "10",
        "sourceId" : "1",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Workshop administrators who manage appointments, services, and system configuration",
      "id" : "2",
      "location" : "Unspecified",
      "name" : "Admin",
      "relationships" : [ {
        "description" : "Manages appointments and configuration through",
        "destinationId" : "4",
        "id" : "11",
        "sourceId" : "2",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Workshop mechanics who receive appointment notifications and updates",
      "id" : "3",
      "location" : "Unspecified",
      "name" : "Mechanic",
      "relationships" : [ {
        "description" : "Receives notifications from",
        "destinationId" : "4",
        "id" : "12",
        "sourceId" : "3",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    } ],
    "softwareSystems" : [ {
      "description" : "Automotive workshop management system for appointment booking, service management, and car card display",
      "documentation" : { },
      "id" : "4",
      "location" : "Unspecified",
      "name" : "Spring KFZ System",
      "relationships" : [ {
        "description" : "Sends notifications via",
        "destinationId" : "5",
        "id" : "13",
        "sourceId" : "4",
        "tags" : "Relationship"
      }, {
        "description" : "Stores data in",
        "destinationId" : "6",
        "id" : "14",
        "sourceId" : "4",
        "tags" : "Relationship"
      }, {
        "description" : "Stores images in",
        "destinationId" : "7",
        "id" : "15",
        "sourceId" : "4",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System"
    }, {
      "description" : "External SMTP service for sending email notifications",
      "documentation" : { },
      "id" : "5",
      "location" : "Unspecified",
      "name" : "Email Service",
      "tags" : "Element,Software System"
    }, {
      "description" : "Relational database for storing all application data",
      "documentation" : { },
      "id" : "6",
      "location" : "Unspecified",
      "name" : "MySQL Database",
      "tags" : "Element,Software System"
    }, {
      "containers" : [ {
        "components" : [ {
          "description" : "Manages service site content and descriptions",
          "documentation" : { },
          "id" : "17",
          "name" : "Service Site Controller",
          "properties" : {
            "component.type" : "org.example.project.controller.serviceSite.ServiceSiteController"
          },
          "relationships" : [ {
            "description" : "uses",
            "destinationId" : "25",
            "id" : "66",
            "sourceId" : "17",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Controller",
          "technology" : "Spring MVC"
        }, {
          "description" : "Displays available cars for sale with specifications and images",
          "documentation" : { },
          "id" : "18",
          "name" : "Car Card Controller",
          "properties" : {
            "component.type" : "org.example.project.controller.carCard.CarCardController"
          },
          "relationships" : [ {
            "description" : "uses",
            "destinationId" : "26",
            "id" : "67",
            "sourceId" : "18",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Controller",
          "technology" : "Spring MVC"
        }, {
          "description" : "Manages available appointment time slots",
          "documentation" : { },
          "id" : "19",
          "name" : "Time Slot Controller",
          "properties" : {
            "component.type" : "org.example.project.controller.timeSlot.TimeSlotController"
          },
          "tags" : "Element,Component,Annotated,Controller",
          "technology" : "Spring MVC"
        }, {
          "description" : "Handles user authentication, login, logout, and session management",
          "documentation" : { },
          "id" : "20",
          "name" : "Authentication Controller",
          "properties" : {
            "component.type" : "org.example.project.controller.auth.AuthenticationController"
          },
          "tags" : "Element,Component,Annotated,Controller",
          "technology" : "Spring MVC"
        }, {
          "description" : "Manages customer appointment booking and status updates",
          "documentation" : { },
          "id" : "21",
          "name" : "Appointment Controller",
          "properties" : {
            "component.type" : "org.example.project.controller.appointment.AppointmentController"
          },
          "relationships" : [ {
            "description" : "uses",
            "destinationId" : "31",
            "id" : "68",
            "sourceId" : "21",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Controller",
          "technology" : "Spring MVC"
        }, {
          "description" : "Handles admin-specific authentication and credential management",
          "documentation" : { },
          "id" : "22",
          "name" : "Admin Auth Controller",
          "properties" : {
            "component.type" : "org.example.project.controller.adminAuth.AdminAuthController"
          },
          "relationships" : [ {
            "description" : "uses",
            "destinationId" : "36",
            "id" : "69",
            "sourceId" : "22",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Controller",
          "technology" : "Spring MVC"
        }, {
          "description" : "Handles admin-specific operations for appointments, services, time slots, and car cards",
          "documentation" : { },
          "id" : "23",
          "name" : "Admin Controller",
          "properties" : {
            "component.type" : "org.example.project.controller.adminController.AdminController"
          },
          "relationships" : [ {
            "description" : "uses",
            "destinationId" : "31",
            "id" : "70",
            "sourceId" : "23",
            "tags" : "Relationship"
          }, {
            "description" : "uses",
            "destinationId" : "26",
            "id" : "71",
            "sourceId" : "23",
            "tags" : "Relationship"
          }, {
            "description" : "uses",
            "destinationId" : "25",
            "id" : "72",
            "sourceId" : "23",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Controller",
          "technology" : "Spring MVC"
        }, {
          "description" : "Provides endpoints for available workshop services",
          "documentation" : { },
          "id" : "24",
          "name" : "Service Controller",
          "properties" : {
            "component.type" : "org.example.project.controller.service.ServiceController"
          },
          "tags" : "Element,Component,Annotated,Controller",
          "technology" : "Spring MVC"
        }, {
          "description" : "Manages service site content and information",
          "documentation" : { },
          "id" : "25",
          "name" : "Service Site Service",
          "properties" : {
            "component.type" : "org.example.project.services.serviceSite.ServiceSiteService"
          },
          "relationships" : [ {
            "description" : "uses",
            "destinationId" : "58",
            "id" : "73",
            "sourceId" : "25",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Service",
          "technology" : "Spring Service"
        }, {
          "description" : "Manages car listings with image processing and storage",
          "documentation" : { },
          "id" : "26",
          "name" : "Car Card Service",
          "properties" : {
            "component.type" : "org.example.project.services.carCardService.CarCardService"
          },
          "relationships" : [ {
            "destinationId" : "33",
            "id" : "41",
            "sourceId" : "26",
            "tags" : "Relationship"
          }, {
            "description" : "uses",
            "destinationId" : "33",
            "id" : "74",
            "sourceId" : "26",
            "tags" : "Relationship"
          }, {
            "description" : "uses",
            "destinationId" : "27",
            "id" : "75",
            "sourceId" : "26",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Service",
          "technology" : "Spring Service"
        }, {
          "description" : "Maps between CarCardDTO and CarCardDAO entities",
          "documentation" : { },
          "id" : "27",
          "name" : "Car Card Mapper",
          "properties" : {
            "component.type" : "org.example.project.services.carCardService.mapper.CarCardMapper"
          },
          "relationships" : [ {
            "description" : "converts to/from",
            "destinationId" : "62",
            "id" : "76",
            "sourceId" : "27",
            "tags" : "Relationship"
          }, {
            "description" : "converts to/from",
            "destinationId" : "51",
            "id" : "77",
            "sourceId" : "27",
            "tags" : "Relationship"
          }, {
            "description" : "converts to/from",
            "destinationId" : "61",
            "id" : "78",
            "sourceId" : "27",
            "tags" : "Relationship"
          }, {
            "description" : "converts to/from",
            "destinationId" : "50",
            "id" : "79",
            "sourceId" : "27",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Mapper",
          "technology" : "Spring Component"
        }, {
          "description" : "Implementation of Time Slot Service  interface",
          "documentation" : { },
          "id" : "28",
          "name" : "Time Slot Service Impl",
          "properties" : {
            "component.type" : "org.example.project.services.timeSlot.TimeSlotServiceImpl"
          },
          "tags" : "Element,Component,Annotated,Implementation",
          "technology" : "Java"
        }, {
          "description" : "Maps between TimeSlotDTO and TimeSlotDAO entities",
          "documentation" : { },
          "id" : "29",
          "name" : "Time Slot Mapper",
          "properties" : {
            "component.type" : "org.example.project.services.timeSlot.mapper.TimeSlotMapper"
          },
          "relationships" : [ {
            "description" : "converts to/from",
            "destinationId" : "63",
            "id" : "80",
            "sourceId" : "29",
            "tags" : "Relationship"
          }, {
            "description" : "converts to/from",
            "destinationId" : "48",
            "id" : "81",
            "sourceId" : "29",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Mapper",
          "technology" : "Spring Component"
        }, {
          "description" : "Implementation of Appointment Service  interface",
          "documentation" : { },
          "id" : "30",
          "name" : "Appointment Service Impl",
          "properties" : {
            "component.type" : "org.example.project.services.appointment.AppointmentServiceImpl"
          },
          "tags" : "Element,Component,Annotated,Implementation",
          "technology" : "Java"
        }, {
          "description" : "Business logic for appointment management, validation, and status updates",
          "documentation" : { },
          "id" : "31",
          "name" : "Appointment Service",
          "properties" : {
            "component.type" : "org.example.project.services.appointment.AppointmentService"
          },
          "relationships" : [ {
            "description" : "uses",
            "destinationId" : "45",
            "id" : "82",
            "sourceId" : "31",
            "tags" : "Relationship"
          }, {
            "description" : "uses",
            "destinationId" : "44",
            "id" : "83",
            "sourceId" : "31",
            "tags" : "Relationship"
          }, {
            "description" : "uses",
            "destinationId" : "32",
            "id" : "84",
            "sourceId" : "31",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Service",
          "technology" : "Spring Service"
        }, {
          "description" : "Maps between AppointmentDTO and AppointmentDAO entities",
          "documentation" : { },
          "id" : "32",
          "name" : "Appointment Mapper",
          "properties" : {
            "component.type" : "org.example.project.services.appointment.mapper.AppointmentMapper"
          },
          "relationships" : [ {
            "description" : "converts to/from",
            "destinationId" : "64",
            "id" : "85",
            "sourceId" : "32",
            "tags" : "Relationship"
          }, {
            "description" : "converts to/from",
            "destinationId" : "49",
            "id" : "86",
            "sourceId" : "32",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Mapper",
          "technology" : "Spring Component"
        }, {
          "description" : "Processes, resizes, and manages image files for car cards",
          "documentation" : { },
          "id" : "33",
          "name" : "Image Service",
          "properties" : {
            "component.type" : "org.example.project.services.Image.ImageService"
          },
          "tags" : "Element,Component,Annotated,Service",
          "technology" : "Spring Service"
        }, {
          "description" : "Implementation of Email Service  interface",
          "documentation" : { },
          "id" : "34",
          "name" : "Email Service Impl",
          "properties" : {
            "component.type" : "org.example.project.services.Email.EmailServiceImpl"
          },
          "tags" : "Element,Component,Annotated,Implementation",
          "technology" : "Java"
        }, {
          "description" : "Implementation of User Details Service  interface",
          "documentation" : { },
          "id" : "35",
          "name" : "User Details Service Impl",
          "properties" : {
            "component.type" : "org.example.project.services.userDetailService.UserDetailsServiceImpl"
          },
          "relationships" : [ {
            "destinationId" : "39",
            "id" : "42",
            "sourceId" : "35",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Implementation",
          "technology" : "Java"
        }, {
          "description" : "Manages admin credential updates and password changes",
          "documentation" : { },
          "id" : "36",
          "name" : "Admin Credential Service",
          "properties" : {
            "component.type" : "org.example.project.services.adminAuth.AdminCredentialService"
          },
          "tags" : "Element,Component,Annotated,Service",
          "technology" : "Spring Service"
        }, {
          "description" : "Implementation of Service Service  interface",
          "documentation" : { },
          "id" : "37",
          "name" : "Service Service Impl",
          "properties" : {
            "component.type" : "org.example.project.services.service.ServiceServiceImpl"
          },
          "tags" : "Element,Component,Annotated,Implementation",
          "technology" : "Java"
        }, {
          "description" : "Maps between ServiceDTO and ServiceItemDAO entities",
          "documentation" : { },
          "id" : "38",
          "name" : "Service Mapper",
          "properties" : {
            "component.type" : "org.example.project.services.service.mapper.ServiceMapper"
          },
          "relationships" : [ {
            "description" : "converts to/from",
            "destinationId" : "65",
            "id" : "87",
            "sourceId" : "38",
            "tags" : "Relationship"
          }, {
            "description" : "converts to/from",
            "destinationId" : "52",
            "id" : "88",
            "sourceId" : "38",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Mapper",
          "technology" : "Spring Component"
        }, {
          "description" : "Maps between UserDAO entities and Spring Security UserDetails",
          "documentation" : { },
          "id" : "39",
          "name" : "Authentication Mapper",
          "properties" : {
            "component.type" : "org.example.project.services.user.mapper.AuthenticationMapper"
          },
          "relationships" : [ {
            "description" : "converts from",
            "destinationId" : "53",
            "id" : "89",
            "sourceId" : "39",
            "tags" : "Relationship"
          }, {
            "description" : "converts to",
            "destinationId" : "59",
            "id" : "90",
            "sourceId" : "39",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Mapper",
          "technology" : "Spring Component"
        }, {
          "description" : "Implementation of User Service  interface",
          "documentation" : { },
          "id" : "40",
          "name" : "User Service Impl",
          "properties" : {
            "component.type" : "org.example.project.services.user.UserServiceImpl"
          },
          "relationships" : [ {
            "destinationId" : "39",
            "id" : "43",
            "sourceId" : "40",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Implementation",
          "technology" : "Java"
        }, {
          "description" : "Data access layer for time slot entities with availability queries",
          "documentation" : { },
          "id" : "44",
          "name" : "Time Slot Repository",
          "properties" : {
            "component.type" : "org.example.project.repositories.timeSlot.TimeSlotRepository"
          },
          "relationships" : [ {
            "description" : "manages",
            "destinationId" : "48",
            "id" : "91",
            "sourceId" : "44",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Repository",
          "technology" : "Spring Data JPA"
        }, {
          "description" : "Data access layer for appointment entities with custom queries",
          "documentation" : { },
          "id" : "45",
          "name" : "Appointment Repository",
          "properties" : {
            "component.type" : "org.example.project.repositories.appointment.AppointmentRepository"
          },
          "relationships" : [ {
            "description" : "manages",
            "destinationId" : "49",
            "id" : "92",
            "sourceId" : "45",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Repository",
          "technology" : "Spring Data JPA"
        }, {
          "description" : "Data access layer for service items with popularity filtering",
          "documentation" : { },
          "id" : "46",
          "name" : "Service Repository",
          "properties" : {
            "component.type" : "org.example.project.repositories.service.ServiceRepository"
          },
          "relationships" : [ {
            "description" : "manages",
            "destinationId" : "52",
            "id" : "93",
            "sourceId" : "46",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Repository",
          "technology" : "Spring Data JPA"
        }, {
          "description" : "Entity representing service site content and descriptions",
          "documentation" : { },
          "id" : "47",
          "name" : "Service Site DAO",
          "properties" : {
            "component.type" : "org.example.project.repositories.serviceSite.model.ServiceSiteDAO"
          },
          "tags" : "Element,Component,Annotated,Entity",
          "technology" : "JPA Entity"
        }, {
          "description" : "Entity representing available appointment time slots with date and time information",
          "documentation" : { },
          "id" : "48",
          "name" : "Time Slot DAO",
          "properties" : {
            "component.type" : "org.example.project.repositories.timeSlot.model.TimeSlotDAO"
          },
          "tags" : "Element,Component,Annotated,Entity",
          "technology" : "JPA Entity"
        }, {
          "description" : "Entity representing customer appointments with time slots and service details",
          "documentation" : { },
          "id" : "49",
          "name" : "Appointment DAO",
          "properties" : {
            "component.type" : "org.example.project.repositories.appointment.model.AppointmentDAO"
          },
          "relationships" : [ {
            "description" : "references",
            "destinationId" : "48",
            "id" : "94",
            "sourceId" : "49",
            "tags" : "Relationship"
          }, {
            "description" : "references",
            "destinationId" : "52",
            "id" : "95",
            "sourceId" : "49",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Entity",
          "technology" : "JPA Entity"
        }, {
          "description" : "Entity representing detailed car specifications including engine, transmission, fuel type",
          "documentation" : { },
          "id" : "50",
          "name" : "Car Spec DAO",
          "properties" : {
            "component.type" : "org.example.project.repositories.carcards.model.CarSpecDAO"
          },
          "tags" : "Element,Component,Annotated,Entity",
          "technology" : "JPA Entity"
        }, {
          "description" : "Entity representing cars for sale with specifications and images",
          "documentation" : { },
          "id" : "51",
          "name" : "Car Card DAO",
          "properties" : {
            "component.type" : "org.example.project.repositories.carcards.model.CarCardDAO"
          },
          "relationships" : [ {
            "description" : "contains",
            "destinationId" : "50",
            "id" : "96",
            "sourceId" : "51",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Entity",
          "technology" : "JPA Entity"
        }, {
          "description" : "Entity representing workshop services with popularity flags",
          "documentation" : { },
          "id" : "52",
          "name" : "Service Item DAO",
          "properties" : {
            "component.type" : "org.example.project.repositories.service.model.ServiceItemDAO"
          },
          "relationships" : [ {
            "description" : "referenced by",
            "destinationId" : "49",
            "id" : "97",
            "sourceId" : "52",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Entity",
          "technology" : "JPA Entity"
        }, {
          "description" : "Entity representing system users with authentication details",
          "documentation" : { },
          "id" : "53",
          "name" : "User DAO",
          "properties" : {
            "component.type" : "org.example.project.repositories.user.model.UserDAO"
          },
          "relationships" : [ {
            "description" : "has many",
            "destinationId" : "54",
            "id" : "98",
            "sourceId" : "53",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Entity",
          "technology" : "JPA Entity"
        }, {
          "description" : "Entity representing user roles for authorization (ADMIN, USER)",
          "documentation" : { },
          "id" : "54",
          "name" : "Role DAO",
          "properties" : {
            "component.type" : "org.example.project.repositories.user.model.RoleDAO"
          },
          "tags" : "Element,Component,Annotated,Entity",
          "technology" : "JPA Entity"
        }, {
          "description" : "Component discovered by Web Configuration",
          "documentation" : { },
          "id" : "55",
          "name" : "Security Config",
          "properties" : {
            "component.type" : "org.example.project.config.SecurityConfig"
          },
          "tags" : "Element,Component,Annotated",
          "technology" : "Java"
        }, {
          "description" : "Configures web resources, static file serving, and CORS mappings",
          "documentation" : { },
          "id" : "56",
          "name" : "Web Config",
          "properties" : {
            "component.type" : "org.example.project.config.WebConfig"
          },
          "tags" : "Element,Component,Annotated,Configuration",
          "technology" : "Spring MVC"
        }, {
          "description" : "Configures file upload handling for car images with size limits",
          "documentation" : { },
          "id" : "57",
          "name" : "Multipart Config",
          "properties" : {
            "component.type" : "org.example.project.config.MultipartConfig"
          },
          "tags" : "Element,Component,Annotated,Configuration",
          "technology" : "Spring Boot"
        }, {
          "description" : "Maps between ServiceSiteDTO and ServiceSiteDAO entities",
          "documentation" : { },
          "id" : "58",
          "name" : "Service Site Mapper",
          "properties" : {
            "component.type" : "org.example.project.services.serviceSite.mapper.ServiceSiteMapper"
          },
          "relationships" : [ {
            "description" : "converts to/from",
            "destinationId" : "60",
            "id" : "99",
            "sourceId" : "58",
            "tags" : "Relationship"
          }, {
            "description" : "converts to/from",
            "destinationId" : "47",
            "id" : "100",
            "sourceId" : "58",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Mapper",
          "technology" : "Spring Component"
        }, {
          "description" : "Data transfer object for user authentication information",
          "documentation" : { },
          "id" : "59",
          "name" : "User Information DTO",
          "properties" : {
            "component.type" : "org.example.project.controller.auth.model.UserInformationDTO"
          },
          "tags" : "Element,Component,Pattern-Matched,DTO",
          "technology" : "Java POJO"
        }, {
          "description" : "Data transfer object for service site content between layers",
          "documentation" : { },
          "id" : "60",
          "name" : "Service Site DTO",
          "properties" : {
            "component.type" : "org.example.project.services.serviceSite.model.ServiceSiteDTO"
          },
          "tags" : "Element,Component,Pattern-Matched,DTO",
          "technology" : "Java POJO"
        }, {
          "description" : "Data transfer object for car specification information between layers",
          "documentation" : { },
          "id" : "61",
          "name" : "Car Spec DTO",
          "properties" : {
            "component.type" : "org.example.project.services.carCardService.model.CarSpecDTO"
          },
          "tags" : "Element,Component,Pattern-Matched,DTO",
          "technology" : "Java POJO"
        }, {
          "description" : "Data transfer object for car card information between layers",
          "documentation" : { },
          "id" : "62",
          "name" : "Car Card DTO",
          "properties" : {
            "component.type" : "org.example.project.services.carCardService.model.CarCardDTO"
          },
          "tags" : "Element,Component,Pattern-Matched,DTO",
          "technology" : "Java POJO"
        }, {
          "description" : "Data transfer object for time slot information between layers",
          "documentation" : { },
          "id" : "63",
          "name" : "Time Slot DTO",
          "properties" : {
            "component.type" : "org.example.project.services.timeSlot.model.TimeSlotDTO"
          },
          "tags" : "Element,Component,Pattern-Matched,DTO",
          "technology" : "Java POJO"
        }, {
          "description" : "Data transfer object for appointment information between layers",
          "documentation" : { },
          "id" : "64",
          "name" : "Appointment DTO",
          "properties" : {
            "component.type" : "org.example.project.services.appointment.model.AppointmentDTO"
          },
          "tags" : "Element,Component,Pattern-Matched,DTO",
          "technology" : "Java POJO"
        }, {
          "description" : "Data transfer object for service item information between layers",
          "documentation" : { },
          "id" : "65",
          "name" : "Service DTO",
          "properties" : {
            "component.type" : "org.example.project.services.service.model.ServiceDTO"
          },
          "tags" : "Element,Component,Pattern-Matched,DTO",
          "technology" : "Java POJO"
        } ],
        "description" : "Spring Boot REST API providing endpoints for workshop management",
        "documentation" : { },
        "id" : "8",
        "name" : "Web Application",
        "tags" : "Element,Container",
        "technology" : "Spring Boot, Java 21"
      }, {
        "components" : [ {
          "description" : "Configures authentication, authorization, CORS, password encoders, and security filters",
          "documentation" : { },
          "id" : "101",
          "name" : "Security Config",
          "properties" : {
            "component.type" : "org.example.project.config.SecurityConfig"
          },
          "tags" : "Element,Component,Pattern-Matched,Configuration",
          "technology" : "Spring Security"
        } ],
        "description" : "Spring Security configuration for authentication and authorization",
        "documentation" : { },
        "id" : "9",
        "name" : "Security Layer",
        "relationships" : [ {
          "description" : "Secures",
          "destinationId" : "8",
          "id" : "16",
          "sourceId" : "9",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Spring Security"
      } ],
      "description" : "Local file storage for car images and uploads",
      "documentation" : { },
      "id" : "7",
      "location" : "Unspecified",
      "name" : "File System",
      "tags" : "Element,Software System"
    } ]
  },
  "name" : "Spring KFZ Workshop Management System",
  "views" : {
    "componentViews" : [ {
      "containerId" : "8",
      "description" : "Web Application Components",
      "elements" : [ {
        "id" : "17",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "18",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "19",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "20",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "21",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "22",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "23",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "24",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "25",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "26",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "27",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "28",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "29",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "30",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "31",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "32",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "33",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "34",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "35",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "36",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "37",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "38",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "39",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "40",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "44",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "45",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "46",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "47",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "48",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "49",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "50",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "51",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "52",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "53",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "54",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "55",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "56",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "57",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "58",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "59",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "60",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "61",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "62",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "63",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "64",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "65",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "web-application-components",
      "order" : 2,
      "relationships" : [ {
        "id" : "100"
      }, {
        "id" : "41"
      }, {
        "id" : "42"
      }, {
        "id" : "43"
      }, {
        "id" : "66"
      }, {
        "id" : "67"
      }, {
        "id" : "68"
      }, {
        "id" : "69"
      }, {
        "id" : "70"
      }, {
        "id" : "71"
      }, {
        "id" : "72"
      }, {
        "id" : "73"
      }, {
        "id" : "74"
      }, {
        "id" : "75"
      }, {
        "id" : "76"
      }, {
        "id" : "77"
      }, {
        "id" : "78"
      }, {
        "id" : "79"
      }, {
        "id" : "80"
      }, {
        "id" : "81"
      }, {
        "id" : "82"
      }, {
        "id" : "83"
      }, {
        "id" : "84"
      }, {
        "id" : "85"
      }, {
        "id" : "86"
      }, {
        "id" : "87"
      }, {
        "id" : "88"
      }, {
        "id" : "89"
      }, {
        "id" : "90"
      }, {
        "id" : "91"
      }, {
        "id" : "92"
      }, {
        "id" : "93"
      }, {
        "id" : "94"
      }, {
        "id" : "95"
      }, {
        "id" : "96"
      }, {
        "id" : "97"
      }, {
        "id" : "98"
      }, {
        "id" : "99"
      } ]
    }, {
      "containerId" : "9",
      "description" : "Security Layer Components",
      "elements" : [ {
        "id" : "101",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "security-layer-components",
      "order" : 3
    } ],
    "configuration" : {
      "branding" : { },
      "styles" : {
        "elements" : [ {
          "background" : "#08427b",
          "color" : "#ffffff",
          "shape" : "Person",
          "tag" : "Person"
        }, {
          "background" : "#438dd5",
          "color" : "#ffffff",
          "tag" : "Container"
        }, {
          "background" : "#85bb65",
          "color" : "#ffffff",
          "tag" : "Info"
        }, {
          "background" : "#7560ba",
          "color" : "#ffffff",
          "tag" : "Request"
        }, {
          "background" : "#e6bd56",
          "color" : "#000000",
          "tag" : "Response"
        }, {
          "background" : "#b86950",
          "color" : "#ffffff",
          "tag" : "Result"
        }, {
          "background" : "#60aa9f",
          "color" : "#ffffff",
          "tag" : "Endpoint"
        }, {
          "background" : "#4b79cc",
          "color" : "#ffffff",
          "tag" : "API"
        }, {
          "background" : "#f5da55",
          "color" : "#000000",
          "tag" : "Implementation"
        }, {
          "background" : "#b86950",
          "color" : "#ffffff",
          "tag" : "Infrastructure"
        } ]
      },
      "terminology" : { }
    },
    "containerViews" : [ {
      "description" : "Container View",
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "3",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "4",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "6",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "8",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "9",
        "x" : 0,
        "y" : 0
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "containers",
      "order" : 1,
      "relationships" : [ {
        "id" : "10"
      }, {
        "id" : "11"
      }, {
        "id" : "12"
      }, {
        "id" : "13"
      }, {
        "id" : "14"
      }, {
        "id" : "16"
      } ],
      "softwareSystemId" : "7"
    } ]
  }
}