{
  "configuration" : { },
  "description" : "Component analysis for Avatar Connector System",
  "documentation" : { },
  "id" : 0,
  "model" : {
    "people" : [ {
      "description" : "Uses the Avatar system to access healthcare data",
      "id" : "1",
      "location" : "Unspecified",
      "name" : "Client User",
      "relationships" : [ {
        "description" : "Makes data requests through",
        "destinationId" : "2",
        "id" : "3",
        "sourceId" : "1",
        "tags" : "Relationship"
      }, {
        "description" : "Sends requests to",
        "destinationId" : "6",
        "id" : "12",
        "sourceId" : "1",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    } ],
    "softwareSystems" : [ {
      "containers" : [ {
        "components" : [ {
          "description" : "Base interface providing metadata about connectors",
          "documentation" : { },
          "id" : "13",
          "name" : "AvatarConnectorInfo",
          "tags" : "Element,Component,API",
          "technology" : "Java Interface"
        }, {
          "description" : "Main service interface for connector implementations",
          "documentation" : { },
          "id" : "14",
          "name" : "AvatarConnector",
          "relationships" : [ {
            "description" : "extends",
            "destinationId" : "13",
            "id" : "15",
            "sourceId" : "14",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,API",
          "technology" : "Java Interface"
        } ],
        "description" : "Defines the core contract for connectors",
        "documentation" : { },
        "id" : "4",
        "name" : "Connector API",
        "tags" : "Element,Container",
        "technology" : "Java/OSGi"
      }, {
        "components" : [ {
          "description" : "Java-specific result implementation with type string and value",
          "documentation" : { },
          "id" : "16",
          "name" : "Java Result",
          "properties" : {
            "component.type" : "de.avatar.model.connector.JavaResult"
          },
          "relationships" : [ {
            "description" : "extends",
            "destinationId" : "34",
            "id" : "36",
            "sourceId" : "16",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Connector,Result",
          "technology" : "EMF Model"
        }, {
          "description" : "Factory for creating connector model instances",
          "documentation" : { },
          "id" : "17",
          "name" : "A Connector Factory",
          "properties" : {
            "component.type" : "de.avatar.model.connector.AConnectorFactory"
          },
          "relationships" : [ {
            "description" : "creates",
            "destinationId" : "20",
            "id" : "37",
            "sourceId" : "17",
            "tags" : "Relationship"
          }, {
            "description" : "creates",
            "destinationId" : "30",
            "id" : "38",
            "sourceId" : "17",
            "tags" : "Relationship"
          }, {
            "description" : "creates",
            "destinationId" : "24",
            "id" : "39",
            "sourceId" : "17",
            "tags" : "Relationship"
          }, {
            "description" : "creates",
            "destinationId" : "21",
            "id" : "40",
            "sourceId" : "17",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Factory,Connector",
          "technology" : "EMF Model"
        }, {
          "description" : "Enumeration defining HTTP response codes and connector-specific response codes",
          "documentation" : { },
          "id" : "18",
          "name" : "Response Code",
          "properties" : {
            "component.type" : "de.avatar.model.connector.ResponseCode"
          },
          "tags" : "Element,Component,Annotated,Connector,Enum",
          "technology" : "EMF Model"
        }, {
          "description" : "Java-specific parameter implementation with type string and value",
          "documentation" : { },
          "id" : "19",
          "name" : "Java Parameter",
          "properties" : {
            "component.type" : "de.avatar.model.connector.JavaParameter"
          },
          "relationships" : [ {
            "description" : "extends",
            "destinationId" : "28",
            "id" : "41",
            "sourceId" : "19",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Connector,Parameter",
          "technology" : "EMF Model"
        }, {
          "description" : "Contains metadata about a connector including id, name, provider, version",
          "documentation" : { },
          "id" : "20",
          "name" : "Connector Info",
          "properties" : {
            "component.type" : "de.avatar.model.connector.ConnectorInfo"
          },
          "relationships" : [ {
            "description" : "uses",
            "destinationId" : "30",
            "id" : "42",
            "sourceId" : "20",
            "tags" : "Relationship"
          }, {
            "description" : "uses",
            "destinationId" : "35",
            "id" : "43",
            "sourceId" : "20",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Connector,Info",
          "technology" : "EMF Model"
        }, {
          "description" : "Represents a response returned from an endpoint with result and timestamp",
          "documentation" : { },
          "id" : "21",
          "name" : "Endpoint Response",
          "properties" : {
            "component.type" : "de.avatar.model.connector.EndpointResponse"
          },
          "relationships" : [ {
            "description" : "responds-to",
            "destinationId" : "24",
            "id" : "44",
            "sourceId" : "21",
            "tags" : "Relationship"
          }, {
            "description" : "contains",
            "destinationId" : "34",
            "id" : "45",
            "sourceId" : "21",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Connector,Response",
          "technology" : "EMF Model"
        }, {
          "description" : "Simple result implementation containing a string value",
          "documentation" : { },
          "id" : "22",
          "name" : "Simple Result",
          "properties" : {
            "component.type" : "de.avatar.model.connector.SimpleResult"
          },
          "relationships" : [ {
            "description" : "extends",
            "destinationId" : "34",
            "id" : "46",
            "sourceId" : "22",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Connector,Result",
          "technology" : "EMF Model"
        }, {
          "description" : "EMF Ecore-specific result implementation",
          "documentation" : { },
          "id" : "23",
          "name" : "Ecore Result",
          "properties" : {
            "component.type" : "de.avatar.model.connector.EcoreResult"
          },
          "relationships" : [ {
            "description" : "extends",
            "destinationId" : "34",
            "id" : "47",
            "sourceId" : "23",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Connector,Result",
          "technology" : "EMF Model"
        }, {
          "description" : "Represents a request sent to an endpoint with parameters and timestamp",
          "documentation" : { },
          "id" : "24",
          "name" : "Endpoint Request",
          "properties" : {
            "component.type" : "de.avatar.model.connector.EndpointRequest"
          },
          "relationships" : [ {
            "description" : "uses",
            "destinationId" : "30",
            "id" : "48",
            "sourceId" : "24",
            "tags" : "Relationship"
          }, {
            "description" : "uses",
            "destinationId" : "28",
            "id" : "49",
            "sourceId" : "24",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Connector,Request",
          "technology" : "EMF Model"
        }, {
          "description" : "Enumeration defining connector status types (ONLINE, OFFLINE, etc.)",
          "documentation" : { },
          "id" : "25",
          "name" : "Status Type",
          "properties" : {
            "component.type" : "de.avatar.model.connector.StatusType"
          },
          "tags" : "Element,Component,Annotated,Connector,Enum",
          "technology" : "EMF Model"
        }, {
          "description" : "EMF Ecore-specific parameter implementation",
          "documentation" : { },
          "id" : "26",
          "name" : "Ecore Parameter",
          "properties" : {
            "component.type" : "de.avatar.model.connector.EcoreParameter"
          },
          "relationships" : [ {
            "description" : "extends",
            "destinationId" : "28",
            "id" : "50",
            "sourceId" : "26",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Connector,Parameter",
          "technology" : "EMF Model"
        }, {
          "description" : "The main EMF package containing all connector model metadata and class definitions",
          "documentation" : { },
          "id" : "27",
          "name" : "A Connector Package",
          "properties" : {
            "component.type" : "de.avatar.model.connector.AConnectorPackage"
          },
          "tags" : "Element,Component,Annotated,Connector,Package",
          "technology" : "EMF Model"
        }, {
          "description" : "Abstract base class for defining parameters with name and number",
          "documentation" : { },
          "id" : "28",
          "name" : "Parameter",
          "properties" : {
            "component.type" : "de.avatar.model.connector.Parameter"
          },
          "tags" : "Element,Component,Annotated,Connector,Parameter",
          "technology" : "EMF Model"
        }, {
          "description" : "Represents the outcome of a dry-run operation with result count and estimated runtime",
          "documentation" : { },
          "id" : "29",
          "name" : "Dry Run Result",
          "properties" : {
            "component.type" : "de.avatar.model.connector.DryRunResult"
          },
          "relationships" : [ {
            "description" : "extends",
            "destinationId" : "34",
            "id" : "51",
            "sourceId" : "29",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Connector,Result",
          "technology" : "EMF Model"
        }, {
          "description" : "Defines a connector's endpoint with URI, method, protocol, and media type",
          "documentation" : { },
          "id" : "30",
          "name" : "Connector Endpoint",
          "properties" : {
            "component.type" : "de.avatar.model.connector.ConnectorEndpoint"
          },
          "tags" : "Element,Component,Annotated,Connector,Endpoint",
          "technology" : "EMF Model"
        }, {
          "description" : "Enumeration defining supported protocol types (HTTP, HTTPS, etc.)",
          "documentation" : { },
          "id" : "31",
          "name" : "Protocol Type",
          "properties" : {
            "component.type" : "de.avatar.model.connector.ProtocolType"
          },
          "tags" : "Element,Component,Annotated,Connector,Enum",
          "technology" : "EMF Model"
        }, {
          "description" : "Contains metadata about a response including hash information",
          "documentation" : { },
          "id" : "32",
          "name" : "Response Meta Data",
          "properties" : {
            "component.type" : "de.avatar.model.connector.ResponseMetaData"
          },
          "tags" : "Element,Component,Annotated,Connector,Meta Data",
          "technology" : "EMF Model"
        }, {
          "description" : "Represents an error outcome from an operation with error details and throwable",
          "documentation" : { },
          "id" : "33",
          "name" : "Error Result",
          "properties" : {
            "component.type" : "de.avatar.model.connector.ErrorResult"
          },
          "relationships" : [ {
            "description" : "extends",
            "destinationId" : "34",
            "id" : "52",
            "sourceId" : "33",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Connector,Result",
          "technology" : "EMF Model"
        }, {
          "description" : "Abstract base class for all response results with metadata",
          "documentation" : { },
          "id" : "34",
          "name" : "Response Result",
          "properties" : {
            "component.type" : "de.avatar.model.connector.ResponseResult"
          },
          "relationships" : [ {
            "description" : "contains",
            "destinationId" : "32",
            "id" : "53",
            "sourceId" : "34",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Annotated,Connector,Result",
          "technology" : "EMF Model"
        }, {
          "description" : "Tracks connector performance metrics including timestamp, status, and uptime",
          "documentation" : { },
          "id" : "35",
          "name" : "Connector Metric",
          "properties" : {
            "component.type" : "de.avatar.model.connector.ConnectorMetric"
          },
          "tags" : "Element,Component,Annotated,Connector,Metric",
          "technology" : "EMF Model"
        } ],
        "description" : "EMF-based data models",
        "documentation" : { },
        "id" : "5",
        "name" : "Connector Model",
        "tags" : "Element,Container",
        "technology" : "Java/EMF"
      }, {
        "components" : [ {
          "description" : "Implementation for the ISMA HIMSA protocol",
          "documentation" : { },
          "id" : "54",
          "name" : "ISMA Connector Impl",
          "properties" : {
            "component.type" : "de.avatar.connector.isma.ISMAConnectorImpl"
          },
          "tags" : "Element,Component,Annotated,Implementation,Connector",
          "technology" : "Java/OSGi"
        }, {
          "description" : "Implementation for the HL7 healthcare standard",
          "documentation" : { },
          "id" : "55",
          "name" : "Other Connector Impl",
          "properties" : {
            "component.type" : "de.avatar.connector.other.OtherConnectorImpl"
          },
          "tags" : "Element,Component,Annotated,Implementation,Connector",
          "technology" : "Java/OSGi"
        } ],
        "description" : "Implementations of the API for different protocols",
        "documentation" : { },
        "id" : "6",
        "name" : "Connector Implementations",
        "relationships" : [ {
          "description" : "Implements",
          "destinationId" : "4",
          "id" : "8",
          "sourceId" : "6",
          "tags" : "Relationship"
        }, {
          "description" : "Uses",
          "destinationId" : "5",
          "id" : "9",
          "sourceId" : "6",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Java/OSGi"
      }, {
        "components" : [ {
          "description" : "Whiteboard interface for connector management",
          "documentation" : { },
          "id" : "56",
          "name" : "Connector Whiteboard Impl",
          "properties" : {
            "component.type" : "de.avatar.connector.whiteboard.ConnectorWhiteboardImpl"
          },
          "tags" : "Element,Component,Pattern-Matched,Implementation,Whiteboard,Connector,Infrastructure",
          "technology" : "Java/OSGi"
        }, {
          "description" : "Whiteboard interface for connector management",
          "documentation" : { },
          "id" : "57",
          "name" : "Connector Whiteboard",
          "properties" : {
            "component.type" : "de.avatar.connector.whiteboard.ConnectorWhiteboard"
          },
          "tags" : "Element,Component,Pattern-Matched,Whiteboard,Connector,Infrastructure",
          "technology" : "Java/OSGi"
        }, {
          "description" : "Serializer for converting connector model instances to/from Ecore format",
          "documentation" : { },
          "id" : "58",
          "name" : "Ecore Serializer",
          "properties" : {
            "component.type" : "de.avatar.connector.emf.EcoreSerializer"
          },
          "tags" : "Element,Component,Pattern-Matched,Serializer,Infrastructure",
          "technology" : "Java/OSGi"
        }, {
          "description" : "Provides Ecore serializer factory for connector model serialization",
          "documentation" : { },
          "id" : "59",
          "name" : "Ecore Serializer Factory Provider",
          "properties" : {
            "component.type" : "de.avatar.connector.emf.EcoreSerializerFactoryProvider"
          },
          "relationships" : [ {
            "destinationId" : "60",
            "id" : "61",
            "sourceId" : "59",
            "tags" : "Relationship"
          }, {
            "description" : "provides",
            "destinationId" : "60",
            "id" : "63",
            "sourceId" : "59",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Pattern-Matched,Factory,Serializer,Infrastructure",
          "technology" : "Java/OSGi"
        }, {
          "description" : "Serializer for converting connector model instances to/from Ecore format",
          "documentation" : { },
          "id" : "60",
          "name" : "Ecore Serializer Factory",
          "properties" : {
            "component.type" : "de.avatar.connector.emf.EcoreSerializerFactory"
          },
          "relationships" : [ {
            "destinationId" : "58",
            "id" : "62",
            "sourceId" : "60",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component,Pattern-Matched,Factory,Serializer,Infrastructure",
          "technology" : "Java/OSGi"
        } ],
        "description" : "Supporting components and services",
        "documentation" : { },
        "id" : "7",
        "name" : "Infrastructure",
        "relationships" : [ {
          "description" : "Supports",
          "destinationId" : "4",
          "id" : "10",
          "sourceId" : "7",
          "tags" : "Relationship"
        }, {
          "description" : "Uses",
          "destinationId" : "5",
          "id" : "11",
          "sourceId" : "7",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Java/OSGi"
      } ],
      "description" : "Connector-based system for healthcare data exchange",
      "documentation" : { },
      "id" : "2",
      "location" : "Unspecified",
      "name" : "Avatar System",
      "tags" : "Element,Software System"
    } ]
  },
  "name" : "Avatar C4 Model",
  "views" : {
    "componentViews" : [ {
      "containerId" : "5",
      "description" : "Connector Model Components",
      "elements" : [ {
        "id" : "16",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "17",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "18",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "19",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "20",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "21",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "22",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "23",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "24",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "25",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "26",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "27",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "28",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "29",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "30",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "31",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "32",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "33",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "34",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "35",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "model-components",
      "order" : 2,
      "relationships" : [ {
        "id" : "36"
      }, {
        "id" : "37"
      }, {
        "id" : "38"
      }, {
        "id" : "39"
      }, {
        "id" : "40"
      }, {
        "id" : "41"
      }, {
        "id" : "42"
      }, {
        "id" : "43"
      }, {
        "id" : "44"
      }, {
        "id" : "45"
      }, {
        "id" : "46"
      }, {
        "id" : "47"
      }, {
        "id" : "48"
      }, {
        "id" : "49"
      }, {
        "id" : "50"
      }, {
        "id" : "51"
      }, {
        "id" : "52"
      }, {
        "id" : "53"
      } ]
    }, {
      "containerId" : "4",
      "description" : "Connector API Components",
      "elements" : [ {
        "id" : "13",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "14",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "api-components",
      "order" : 3,
      "relationships" : [ {
        "id" : "15"
      } ]
    }, {
      "containerId" : "6",
      "description" : "Connector Implementation Components",
      "elements" : [ {
        "id" : "54",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "55",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "implementation-components",
      "order" : 4
    }, {
      "containerId" : "7",
      "description" : "Infrastructure Components",
      "elements" : [ {
        "id" : "56",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "57",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "58",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "59",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "60",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "infrastructure-components",
      "order" : 5,
      "relationships" : [ {
        "id" : "61"
      }, {
        "id" : "62"
      }, {
        "id" : "63"
      } ]
    } ],
    "configuration" : {
      "branding" : { },
      "styles" : {
        "elements" : [ {
          "background" : "#08427b",
          "color" : "#ffffff",
          "shape" : "Person",
          "tag" : "Person"
        }, {
          "background" : "#438dd5",
          "color" : "#ffffff",
          "tag" : "Container"
        }, {
          "background" : "#85bb65",
          "color" : "#ffffff",
          "tag" : "Info"
        }, {
          "background" : "#7560ba",
          "color" : "#ffffff",
          "tag" : "Request"
        }, {
          "background" : "#e6bd56",
          "color" : "#000000",
          "tag" : "Response"
        }, {
          "background" : "#b86950",
          "color" : "#ffffff",
          "tag" : "Result"
        }, {
          "background" : "#60aa9f",
          "color" : "#ffffff",
          "tag" : "Endpoint"
        }, {
          "background" : "#4b79cc",
          "color" : "#ffffff",
          "tag" : "API"
        }, {
          "background" : "#f5da55",
          "color" : "#000000",
          "tag" : "Implementation"
        }, {
          "background" : "#b86950",
          "color" : "#ffffff",
          "tag" : "Infrastructure"
        } ]
      },
      "terminology" : { }
    },
    "containerViews" : [ {
      "description" : "Container View",
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "4",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "6",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "7",
        "x" : 0,
        "y" : 0
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "containers",
      "order" : 1,
      "relationships" : [ {
        "id" : "10"
      }, {
        "id" : "11"
      }, {
        "id" : "12"
      }, {
        "id" : "8"
      }, {
        "id" : "9"
      } ],
      "softwareSystemId" : "2"
    } ]
  }
}