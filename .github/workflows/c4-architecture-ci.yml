name: C4 Architecture Documentation CI/CD

permissions:
  contents: write

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  component-change-detection:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout this repo (incl. snapshot branch)
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Fetch previous snapshot.json (if any)
      - name: Fetch previous snapshot
        run: |
          git fetch origin snapshot
          mkdir -p discovered-components
          git show origin/snapshot:discovered-components/components-latest.json \
            > discovered-components/components-latest.json \
            || echo "No previous snapshot found"

      # 3) Clone target project
      - name: Clone target project
        run: |
          git clone https://x-access-token:${{ secrets.PRIVATE_REPO_TOKEN }}@github.com/imissr/Spring_Kfz_Project.git scanned-project

      # 4) Build your C4 generator
      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '22'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: Compile & package C4 generator
        run: mvn clean package -DskipTests

      # 5) Compile scanned project & patch config
      - name: Compile scanned project
        working-directory: scanned-project
        run: mvn clean compile -DskipTests

      - name: Patch strategyConfig.json
        run: |
          jq '.globalConfig.basePaths |= with_entries(.value="scanned-project/target/classes")' \
            src/main/java/org/example/json/strategyConfig.json \
            > strategyConfig.patched.json

      # 6) Run detect+generate using CI-specific class (exit 1 when changed, 0 when no‐change)
      - name: Detect & generate C4 docs
        id: change-detection
        continue-on-error: true
        run: |
          echo "=== DEBUGGING ARGUMENTS ==="
          echo "Current directory: $(pwd)"
          echo "Config file exists: $(ls -la strategyConfig.patched.json)"
          echo "=== USING CI-SPECIFIC CLASS ==="
          
          # Use the CI-specific class that has change detection logic
          echo "Calling C4ModelGeneratorCI with generate-if-changed mode"
          mvn exec:java \
            -Dexec.mainClass="org.example.c4.C4ModelGeneratorCI" \
            -Dexec.args="generate-if-changed src/main/java/org/example/json/c4ModelConfig.json"
          code=$?
          
          echo "=== FINAL RESULT ==="
          echo "Final exit code: $code"
          # 1 = changes detected & docs regenerated
          # 0 = no changes detected  
          # 2 = error occurred
          echo "changes_detected=$([[ $code -eq 1 ]] && echo true || echo false)" >> $GITHUB_OUTPUT

      # 7) Upload artifacts if there were changes
      - name: Upload C4 model artifacts
        if: steps.change-detection.outputs.changes_detected == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: c4-architecture-model
          path: |
            avatar-c4-model.json
            discovered-components/
          retention-days: 30

      # 8) Checkout the snapshot branch into a separate folder
      - name: Checkout snapshot branch
        if: steps.change-detection.outputs.changes_detected == 'true'
        uses: actions/checkout@v4
        with:
          ref: snapshot
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          path: snapshot

      # 9) Overwrite its discovered-components with the newly generated ones
      - name: Update snapshot files
        if: steps.change-detection.outputs.changes_detected == 'true'
        run: |
          rm -rf snapshot/discovered-components
          cp -R discovered-components snapshot/discovered-components

      # 10) Commit & force-push back to snapshot only if there really are diffs
      - name: Commit & push snapshot
        if: steps.change-detection.outputs.changes_detected == 'true'
        run: |
          cd snapshot
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add discovered-components
          if git diff --cached --quiet; then
            echo "No snapshot changes to commit"
          else
            git commit -m "⬆️ Update C4 component snapshots @ ${{ github.sha }}"
            git push origin HEAD:snapshot --force
          fi