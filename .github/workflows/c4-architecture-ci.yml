name: C4 Architecture Documentation CI/CD

permissions:
  contents: write

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  component-change-detection:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout main/master
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 1.1) Ensure snapshot branch exists (emit snapshot_created=true if we just made it)
      - name: Ensure snapshot branch exists
        id: ensure-snapshot
        run: |
          DEFAULT_BRANCH=${GITHUB_REF#refs/heads/}
          if ! git ls-remote --exit-code origin snapshot; then
            echo "Branch snapshot not found → creating empty snapshot"
            git checkout --orphan snapshot
            git rm -rf .
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit --allow-empty -m "Initialize snapshot branch"
            git push origin snapshot
            git checkout "$DEFAULT_BRANCH"
            echo "snapshot_created=true" >> $GITHUB_OUTPUT
          else
            echo "snapshot_created=false" >> $GITHUB_OUTPUT
          fi

      # 2) Fetch & copy previous snapshot only if *not* newly created
      - name: Fetch previous component snapshot
        if: steps.ensure-snapshot.outputs.snapshot_created == 'false'
        uses: actions/checkout@v4
        with:
          ref: snapshot
          fetch-depth: 0
          path: prev-snapshot

      - name: Copy previous snapshot into working folder
        if: steps.ensure-snapshot.outputs.snapshot_created == 'false'
        run: |
          mkdir -p discovered-components
          cp prev-snapshot/discovered-components/components-latest.json \
             discovered-components/components-latest.json

      # 3) Clone target project (needed for both baseline & change-detect)
      - name: Clone target project
        run: |
          git clone https://x-access-token:${{ secrets.PRIVATE_REPO_TOKEN }}@github.com/imissr/Spring_Kfz_Project.git scanned-project

      # 4) Build C4 generator
      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '22'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: Compile & package C4 generator
        run: mvn clean package -DskipTests

      # 5) Compile scanned project (needed by baseline scan too)
      - name: Compile scanned project
        working-directory: scanned-project
        run: mvn clean compile -DskipTests

      # 6) Patch config
      - name: Patch strategyConfig.json
        run: |
          jq '.globalConfig.basePaths |= with_entries(.value="scanned-project/target/classes")' \
            src/main/java/org/example/json/strategyConfig.json \
            > strategyConfig.patched.json

      # 7a) BASELINE MODE (only if we just created snapshot)
      - name: Run baseline snapshot
        if: steps.ensure-snapshot.outputs.snapshot_created == 'true'
        run: |
          echo "▶ Running baseline mode (no previous snapshot)..."
          mvn exec:java \
            -Dexec.mainClass="org.example.c4.C4ModelGeneratorCI" \
            -Dexec.args="baseline src/main/java/org/example/json/c4ModelConfig.json"

      # 7b) CHANGE-DETECTION MODE (only if snapshot already existed)
      - name: Detect changes in C4 components
        if: steps.ensure-snapshot.outputs.snapshot_created == 'false'
        id: change-detection
        continue-on-error: true
        shell: bash
        run: |
          set +e
          echo "▶ Detecting changes against prev snapshot..."
          mvn exec:java \
            -Dexec.mainClass="org.example.c4.C4ModelGeneratorCI" \
            -Dexec.args="change-detect src/main/java/org/example/json/c4ModelConfig.json"
          code=$?
          echo "changes_detected=$([[ $code -eq 1 ]] && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Run C4 model generator
        if: steps.ensure-snapshot.outputs.snapshot_created == 'false' && steps.change-detection.outputs.changes_detected == 'true'
        run: |
          echo "▶ Changes detected → generating new C4 model..."
          mvn exec:java \
            -Dexec.mainClass="org.example.c4.C4ModelGeneratorCI" \
            -Dexec.args="generate-if-changed src/main/java/org/example/json/c4ModelConfig.json"

      # 8) Upload artifacts if either path produced something
      - name: Upload C4 model artifacts
        if: >
          steps.ensure-snapshot.outputs.snapshot_created == 'true' ||
          (steps.ensure-snapshot.outputs.snapshot_created == 'false' && steps.change-detection.outputs.changes_detected == 'true')
        uses: actions/upload-artifact@v4
        with:
          name: c4-architecture-model
          path: |
            avatar-c4-model.json
            discovered-components/
          retention-days: 30

      # 9) Update snapshot branch (common for both baseline & change-detect)
      - name: Checkout snapshot branch for update
        if: >
          steps.ensure-snapshot.outputs.snapshot_created == 'true' ||
          (steps.ensure-snapshot.outputs.snapshot_created == 'false' && steps.change-detection.outputs.changes_detected == 'true')
        uses: actions/checkout@v4
        with:
          ref: snapshot
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          path: snapshot

      - name: Replace snapshot files
        if: >
          steps.ensure-snapshot.outputs.snapshot_created == 'true' ||
          (steps.ensure-snapshot.outputs.snapshot_created == 'false' && steps.change-detection.outputs.changes_detected == 'true')
        run: |
          rm -rf snapshot/discovered-components
          rm -f snapshot/avatar-c4-model.json
          cp -R discovered-components snapshot/discovered-components
          cp avatar-c4-model.json   snapshot/avatar-c4-model.json

      - name: Commit & push snapshot
        if: >
          steps.ensure-snapshot.outputs.snapshot_created == 'true' ||
          (steps.ensure-snapshot.outputs.snapshot_created == 'false' && steps.change-detection.outputs.changes_detected == 'true')
        run: |
          cd snapshot
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add discovered-components avatar-c4-model.json
          if git diff --cached --quiet; then
            echo "No changes to snapshot"
          else
            git commit -m "⬆️ Update C4 component snapshots & avatar model @ ${{ github.sha }}"
            git push origin HEAD:snapshot --force
          fi
